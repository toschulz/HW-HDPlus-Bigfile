#line 1 "d:\\homeworld\\Datasrc\\ETG\\damage\\light\\DamageStrike.etg"
#line 1 "d:\\homeworld\\dataSrc\\ETG\\etg.h"














































































































#line 112 "d:\\homeworld\\dataSrc\\ETG\\etg.h"

#line 1 "d:\\homeworld\\Datasrc\\ETG\\damage\\light\\DamageStrike.etg"
eventStart(float damage, float size)




maxFrequency(15)

variable
{
float sparkSize
float sparkSpeed
float sparkSpeedLOF
float sparkSpeedDist
float sparkLength
float sparkLengthDist
float randomScalar
float sparkDuration

int   sparks
RGBA  modSparkColor
}

startup
{
    setDefaults()
    setScale(2)
        sparkSize <- fmult(size, 0.3)
        sparkSpeedLOF <- fmult(size, 0)
        sparkSpeed <- fmult(size, 10)
        sparkSpeedDist <- fmult(size, 3)
    setDeltaLOFDist(sparkSize)
    setDeltaR(sparkSize, [(360) * 2.0 * 3.14159265359789 / 360.0])
    setDeltaRDist(0, [(360) * 2.0 * 3.14159265359789 / 360.0])
    setVelLOFDist(sparkSpeedLOF)
    setVelR(sparkSpeed)
    setVelRDist(sparkSpeedDist)
    setColorA([255 + 255 * 256 + 255 * 65536 + 230 * 65536 * 256])
        modSparkColor <- [255 + 255 * 256 + 255 * 65536 + 230 * 65536 * 256]

        
        
        randomScalar <- frandom(0.5, 1.5)
        sparkDuration <- 2.0
        sparkDuration <- fmult(randomScalar, sparkDuration)

    setLifespan(sparkDuration)
    setIsWorldSpace(1)
    sparks <- createLines(7,0)

    
    {
        sparkLength <- fmult(size, 0.1)
        sparkLengthDist <- fmult(size, 0.03)

        setLength(sparkLength)
        setLengthDist(sparkLengthDist)
    }
}

eachFrame
{
    modifyColorA(sparks, modSparkColor)
}

timeIndex
{
    timeBlock(modSparkColor)
    {
        time(0.12, 1.0, 1.0, 0.5, 1.0)
        time(0.3, 1.0, 0.5, 0, 0)
    }
}

eachFrame
{
    at(sparkDuration)
    {
        damageDone()
    }
}
